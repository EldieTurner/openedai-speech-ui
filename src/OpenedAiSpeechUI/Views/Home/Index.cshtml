@model OpenedAiSpeechUI.Models.TTSViewModel
@{
    ViewData["Title"] = "Text-to-Speech Converter";
}

<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<style>
    /* Compact Layout */
    body {
        font-size: 14px;
    }

    .tts-container {
        display: flex;
        gap: 10px;
        align-items: start;
    }

    .tts-textarea {
        height: 300px;
        resize: none;
    }

    .tts-controls {
        width: 300px;
        flex-shrink: 0;
    }

    .audio-container {
        padding: 10px;
        border-radius: 5px;
        background-color: var(--bs-gray-200);
    }

    /* Dark Mode */
    body.dark-mode {
        background-color: #121212;
        color: #e0e0e0;
    }

    body.dark-mode .form-control, 
    body.dark-mode .form-select {
        background-color: #333;
        color: #fff;
        border: 1px solid #666;
    }

    body.dark-mode .btn-primary {
        background-color: #007bff;
        border: none;
    }

    body.dark-mode .audio-container, 
    body.dark-mode .advanced-options {
        background-color: #222;
        color: #fff;
    }
</style>

<div class="container my-3">
    <div class="d-flex justify-content-between align-items-center">
        <h2>@ViewData["Title"]</h2>

        <!-- Dark Mode Toggle -->
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="darkModeToggle">
            <label class="form-check-label" for="darkModeToggle">Dark Mode</label>
        </div>
    </div>

    <form asp-action="Index" method="post" class="tts-container mt-2">
        <!-- Left: Text Input -->
        <div class="flex-grow-1">
            <label for="Request.Input" class="form-label fw-bold">Text to Convert</label>
            <textarea id="Request.Input" name="Request.Input" class="form-control tts-textarea">@Model.Request.Input</textarea>
            <span asp-validation-for="Request.Input" class="text-danger"></span>

            <!-- Audio Playback BELOW text box -->
            @if (!string.IsNullOrEmpty(Model.AudioFilePath))
            {
                <div class="audio-container mt-2">
                    <h6>Audio Playback</h6>
                    <audio controls class="w-100">
                        <source src="@Model.AudioFilePath" type="audio/mpeg" />
                        Your browser does not support the audio element.
                    </audio>
                </div>
            }
        </div>

        <!-- Right: Controls -->
        <div class="tts-controls">
            <div class="mb-2">
                <label class="form-label fw-bold">Model</label>
                <select name="Request.Model" class="form-select">
                    <option value="tts-1" selected="@(Model.Request.Model == "tts-1")">tts-1 (Piper)</option>
                    <option value="tts-1-hd" selected="@(Model.Request.Model == "tts-1-hd")">tts-1-hd (High Definition)</option>
                </select>
            </div>

            <div class="mb-2">
                <label class="form-label fw-bold">Voice</label>
                <select name="Request.Voice" class="form-select">
                    <option value="alloy" selected="@(Model.Request.Voice == "alloy")">alloy</option>
                    <option value="echo" selected="@(Model.Request.Voice == "echo")">echo</option>
                    <option value="fable" selected="@(Model.Request.Voice == "fable")">fable</option>
                    <option value="onyx" selected="@(Model.Request.Voice == "onyx")">onyx</option>
                    <option value="nova" selected="@(Model.Request.Voice == "nova")">nova</option>
                    <option value="shimmer" selected="@(Model.Request.Voice == "shimmer")">shimmer</option>
                </select>
            </div>
            <div class="mb-2">
                <label for="Request.ResponseFormat" class="form-label fw-bold">Response Format:</label>
                <select id="Request.ResponseFormat" name="Request.ResponseFormat" class="form-select">
                    <option value="mp3" selected="@(Model.Request.ResponseFormat == "mp3")">mp3</option>
                    <option value="opus" selected="@(Model.Request.ResponseFormat == "opus")">opus</option>
                    <option value="aac" selected="@(Model.Request.ResponseFormat == "aac")">aac</option>
                    <option value="flac" selected="@(Model.Request.ResponseFormat == "flac")">flac</option>
                    <option value="wav" selected="@(Model.Request.ResponseFormat == "wav")">wav</option>
                    <option value="pcm" selected="@(Model.Request.ResponseFormat == "pcm")">pcm</option>
                </select>
            </div>

            <div class="mb-2">
                <label class="form-label fw-bold">Speed</label>
                <input type="number" step="0.1" name="Request.Speed" class="form-control" value="@Model.Request.Speed" />
            </div>

            <!-- Advanced Options -->
            <div class="p-2 rounded advanced-options">
                <h6 class="fw-bold">Advanced Options</h6>
                <div class="mb-2">
                    <label class="form-label">Temperature</label>
                    <input type="number" step="0.01" name="Request.Temperature" class="form-control" value="@Model.Request.Temperature" />
                </div>
                <div class="mb-2">
                    <label class="form-label">Top P</label>
                    <input type="number" step="0.01" name="Request.TopP" class="form-control" value="@Model.Request.TopP" />
                </div>
                <div class="mb-2">
                    <label class="form-label">Top K</label>
                    <input type="number" name="Request.TopK" class="form-control" value="@Model.Request.TopK" />
                </div>
            </div>

            <!-- Convert Button -->
            <div class="text-center mt-3">
                <button type="submit" class="btn btn-primary px-3 py-2 w-100">Convert to Speech</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<!-- Bootstrap & Dark Mode Script -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Dark Mode Toggle
    const toggle = document.getElementById("darkModeToggle");
    toggle.addEventListener("change", function () {
        document.body.classList.toggle("dark-mode", toggle.checked);
        localStorage.setItem("darkMode", toggle.checked ? "enabled" : "disabled");

        // Apply dark mode to Advanced Options explicitly
        document.querySelector(".advanced-options").classList.toggle("dark-mode", toggle.checked);
    });

    // Load Dark Mode Preference
    if (localStorage.getItem("darkMode") === "enabled") {
        document.body.classList.add("dark-mode");
        toggle.checked = true;
        document.querySelector(".advanced-options").classList.add("dark-mode");
    }
</script>
